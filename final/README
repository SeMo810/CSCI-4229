Sean Moss - Final Project - CSCI 4229/5229 - FALL 2015

INSTRUCTIONS:
  * In order to run the program, just run "make" in the directory with the Makefile. The program will be put into the "bin" folder.
  * W/A/S/D moves the camera around, and the mouse wheel zooms in and out of the scene.
  * Camera can be rotated with the Q/E keys.
  * Use the period/comma keys to change ambient lighting, and the apostrophe/semicolon keys to change diffuse lighting.
    * Because there are not models in yet, I included this part to show that the lighting is indeed implemented and working.
    * The lighting affects all of the objects in the world, but ignores the grid and game board separator.
  * The time of day can be changed using  [ ]  keys, to see how the light interacts.
  * The game mechanics are implemented using a script ("game.dat") that is in the "content" folder. You can change the script to change the program steps.
    * Scripting instructions can be found below.

TAKE NOTE OF:
  * How the diffuse light is colored based on the time of day.
  * The scripting system that allows customization of how the game plays out.
  * Modular backend code allowing for more types of ships, if so desired.
  * Animations for both pegs and sinking ships.
  * Skybox.

SCRIPTING INSTRUCTIONS:
  * The game.dat file in the content/ folder contains the instructions for the game moves.
  * The first 5 instructions in the file need to be the ship placement instructions.
  * One instruction per line.
  * Some errors can be caught when it launches, others will not be caught until they are executed.
  * Instructions:
    * 'ship TYPE x y DIRECTION' - Places a ship at the given location with the given orientation.
      * TYPE must be one of PATROL, SUBMARINE, DESTROYER, BATTLESHIP, CARRIER
      * DIRECTION must be one of NORTH, SOUTH, EAST, WEST
      * x and y must be integers between 0 and 7
    * 'wait time' - Pauses the script for the given amount of milliseconds.
      * time must be an integer, with a minimum effective value of 100
    * 'fire x y' - Performs a move on the given location, places a peg, and updates the ships as necessary
      * x and y much be integers between 0 and 7

KNOWN BUGS:
  * Attempting to exit the game before the script is done will crash the game.
